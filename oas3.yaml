openapi: 3.0.0
info:
  version: '1.0'
  title: "Project_30"
  description: API per eseguire il login.
  license:
    name: G30
servers:
  - url: http://localhost:8888/
    description: Localhost
paths:
  /autentication:
    post:
      description: >-
        Autenticazione delle credenziali. Necessarie la email e una password.
      summary: Login utente
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: 'Username dell utente'
                password:
                  type: string
                  description: 'Password dell utente'
      responses:
        '201':
          description: 'Utente autenticato. Link alla home della pagina'
          headers:
            'Location':
              schema:
                type: string
        '500':
          description: 'Errore nel server'
        '401':
          description: 'Autenticazione fallita'
        
  /signup:
    post:
      description: >-
        Iscrizione nuovo utente. Necessaria email non ancora registrata e una password.
      summary: Iscrizione utente
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: 'Username dell utente'
                email:
                  type: string
                  description: 'Email dell utente'
                password:
                  type: string
                  description: 'Password dell utente'
                
      responses:
        '201':
          description: 'Utente registrato con successo'
        '500':
          description: 'Errore registrazione'
        '409':
          description: 'Email già registrata'
        
  /collections:
    get:
      description: >-
        Ritorna i nomi di tutte le collezioni appartenenti ad un utente.
      summaty: Ritorna tutte le collezioni
      responses:
        '200':
          description: 'Lista nomi delle collezioni'
        '404':
          description: 'Non esistono collezioni associate allo utente'
        '505':
          description: 'Errore sul db'
  
    post:
      description: >-
        Creazione di una nuova collezione. Necessità del nome che l'utente desidera assegnare alla collezione.
      summary: Creazione collezione
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: 'Nome da assegnare alla collezione'
      responses:
        '201':
          description: 'Collezione creata'
        '500':
          description: 'Errore creazione collezione'
        '400':
          description: 'Campo name mancante nella request'
        '409':
          description: 'Collezione con nome indicato già registrata'       

components:
  schemas:
    Utente:
      type: object
        - username
        - email
        - password
      properties:
        username:
          type: string
          description: 'Username dell utente'
        email:
          type: string
          description: 'Email dell utente'
        password:
          type: string
          description: 'Password dell utente'
